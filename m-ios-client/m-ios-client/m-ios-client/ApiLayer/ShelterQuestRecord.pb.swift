// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: ShelterQuestRecord.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Sh_Generated_ShelterQuestRecordStatus: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case inProgress // = 0
  case canceled // = 1
  case onReview // = 2
  case checked // = 3
  case rejected // = 4
  case closed // = 5
  case UNRECOGNIZED(Int)

  init() {
    self = .inProgress
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .inProgress
    case 1: self = .canceled
    case 2: self = .onReview
    case 3: self = .checked
    case 4: self = .rejected
    case 5: self = .closed
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .inProgress: return 0
    case .canceled: return 1
    case .onReview: return 2
    case .checked: return 3
    case .rejected: return 4
    case .closed: return 5
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Sh_Generated_ShelterQuestRecordStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Sh_Generated_ShelterQuestRecordStatus] = [
    .inProgress,
    .canceled,
    .onReview,
    .checked,
    .rejected,
    .closed,
  ]
}

#endif  // swift(>=4.2)

struct Sh_Generated_ShelterQuestListRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var token: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Sh_Generated_ShelterQuestListResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var questsRecords: [Sh_Generated_ShelterQuestRecord] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Sh_Generated_ShelterQuestStartRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var shelterQuest: Sh_Generated_ShelterQuest {
    get {return _storage._shelterQuest ?? Sh_Generated_ShelterQuest()}
    set {_uniqueStorage()._shelterQuest = newValue}
  }
  /// Returns true if `shelterQuest` has been explicitly set.
  var hasShelterQuest: Bool {return _storage._shelterQuest != nil}
  /// Clears the value of `shelterQuest`. Subsequent reads from it will return its default value.
  mutating func clearShelterQuest() {_uniqueStorage()._shelterQuest = nil}

  var token: String {
    get {return _storage._token}
    set {_uniqueStorage()._token = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Sh_Generated_ShelterQuestStartResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var shelterQuestRecord: Sh_Generated_ShelterQuestRecord {
    get {return _storage._shelterQuestRecord ?? Sh_Generated_ShelterQuestRecord()}
    set {_uniqueStorage()._shelterQuestRecord = newValue}
  }
  /// Returns true if `shelterQuestRecord` has been explicitly set.
  var hasShelterQuestRecord: Bool {return _storage._shelterQuestRecord != nil}
  /// Clears the value of `shelterQuestRecord`. Subsequent reads from it will return its default value.
  mutating func clearShelterQuestRecord() {_uniqueStorage()._shelterQuestRecord = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Sh_Generated_ShelterQuestUpdateDemandRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var shelterQuestRecordID: Int32 = 0

  var demandID: Int32 = 0

  var check: Bool = false

  var token: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Sh_Generated_ShelterQuestUpdateDemandResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct Sh_Generated_ShelterQuestRecord {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var id: Int32 {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  var shelterQuest: Sh_Generated_ShelterQuest {
    get {return _storage._shelterQuest ?? Sh_Generated_ShelterQuest()}
    set {_uniqueStorage()._shelterQuest = newValue}
  }
  /// Returns true if `shelterQuest` has been explicitly set.
  var hasShelterQuest: Bool {return _storage._shelterQuest != nil}
  /// Clears the value of `shelterQuest`. Subsequent reads from it will return its default value.
  mutating func clearShelterQuest() {_uniqueStorage()._shelterQuest = nil}

  var status: Sh_Generated_ShelterQuestRecordStatus {
    get {return _storage._status}
    set {_uniqueStorage()._status = newValue}
  }

  var startTime: Int32 {
    get {return _storage._startTime}
    set {_uniqueStorage()._startTime = newValue}
  }

  var doneDemandsIds: [Int32] {
    get {return _storage._doneDemandsIds}
    set {_uniqueStorage()._doneDemandsIds = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "sh.generated"

extension Sh_Generated_ShelterQuestRecordStatus: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "IN_PROGRESS"),
    1: .same(proto: "CANCELED"),
    2: .same(proto: "ON_REVIEW"),
    3: .same(proto: "CHECKED"),
    4: .same(proto: "REJECTED"),
    5: .same(proto: "CLOSED"),
  ]
}

extension Sh_Generated_ShelterQuestListRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestListRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "token"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.token)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.token.isEmpty {
      try visitor.visitSingularStringField(value: self.token, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestListRequest, rhs: Sh_Generated_ShelterQuestListRequest) -> Bool {
    if lhs.token != rhs.token {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestListResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestListResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "questsRecords"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.questsRecords)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.questsRecords.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.questsRecords, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestListResponse, rhs: Sh_Generated_ShelterQuestListResponse) -> Bool {
    if lhs.questsRecords != rhs.questsRecords {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestStartRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestStartRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "shelterQuest"),
    2: .same(proto: "token"),
  ]

  fileprivate class _StorageClass {
    var _shelterQuest: Sh_Generated_ShelterQuest? = nil
    var _token: String = String()

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _shelterQuest = source._shelterQuest
      _token = source._token
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._shelterQuest)
        case 2: try decoder.decodeSingularStringField(value: &_storage._token)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._shelterQuest {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._token.isEmpty {
        try visitor.visitSingularStringField(value: _storage._token, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestStartRequest, rhs: Sh_Generated_ShelterQuestStartRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._shelterQuest != rhs_storage._shelterQuest {return false}
        if _storage._token != rhs_storage._token {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestStartResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestStartResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "shelterQuestRecord"),
  ]

  fileprivate class _StorageClass {
    var _shelterQuestRecord: Sh_Generated_ShelterQuestRecord? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _shelterQuestRecord = source._shelterQuestRecord
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._shelterQuestRecord)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._shelterQuestRecord {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestStartResponse, rhs: Sh_Generated_ShelterQuestStartResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._shelterQuestRecord != rhs_storage._shelterQuestRecord {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestUpdateDemandRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestUpdateDemandRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "shelterQuestRecordId"),
    2: .same(proto: "demandId"),
    3: .same(proto: "check"),
    4: .same(proto: "token"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.shelterQuestRecordID)
      case 2: try decoder.decodeSingularInt32Field(value: &self.demandID)
      case 3: try decoder.decodeSingularBoolField(value: &self.check)
      case 4: try decoder.decodeSingularStringField(value: &self.token)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.shelterQuestRecordID != 0 {
      try visitor.visitSingularInt32Field(value: self.shelterQuestRecordID, fieldNumber: 1)
    }
    if self.demandID != 0 {
      try visitor.visitSingularInt32Field(value: self.demandID, fieldNumber: 2)
    }
    if self.check != false {
      try visitor.visitSingularBoolField(value: self.check, fieldNumber: 3)
    }
    if !self.token.isEmpty {
      try visitor.visitSingularStringField(value: self.token, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestUpdateDemandRequest, rhs: Sh_Generated_ShelterQuestUpdateDemandRequest) -> Bool {
    if lhs.shelterQuestRecordID != rhs.shelterQuestRecordID {return false}
    if lhs.demandID != rhs.demandID {return false}
    if lhs.check != rhs.check {return false}
    if lhs.token != rhs.token {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestUpdateDemandResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestUpdateDemandResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestUpdateDemandResponse, rhs: Sh_Generated_ShelterQuestUpdateDemandResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Sh_Generated_ShelterQuestRecord: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShelterQuestRecord"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "shelterQuest"),
    3: .same(proto: "status"),
    4: .same(proto: "startTime"),
    5: .same(proto: "doneDemandsIds"),
  ]

  fileprivate class _StorageClass {
    var _id: Int32 = 0
    var _shelterQuest: Sh_Generated_ShelterQuest? = nil
    var _status: Sh_Generated_ShelterQuestRecordStatus = .inProgress
    var _startTime: Int32 = 0
    var _doneDemandsIds: [Int32] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _shelterQuest = source._shelterQuest
      _status = source._status
      _startTime = source._startTime
      _doneDemandsIds = source._doneDemandsIds
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._id)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._shelterQuest)
        case 3: try decoder.decodeSingularEnumField(value: &_storage._status)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._startTime)
        case 5: try decoder.decodeRepeatedInt32Field(value: &_storage._doneDemandsIds)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._id != 0 {
        try visitor.visitSingularInt32Field(value: _storage._id, fieldNumber: 1)
      }
      if let v = _storage._shelterQuest {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if _storage._status != .inProgress {
        try visitor.visitSingularEnumField(value: _storage._status, fieldNumber: 3)
      }
      if _storage._startTime != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startTime, fieldNumber: 4)
      }
      if !_storage._doneDemandsIds.isEmpty {
        try visitor.visitPackedInt32Field(value: _storage._doneDemandsIds, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Sh_Generated_ShelterQuestRecord, rhs: Sh_Generated_ShelterQuestRecord) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._shelterQuest != rhs_storage._shelterQuest {return false}
        if _storage._status != rhs_storage._status {return false}
        if _storage._startTime != rhs_storage._startTime {return false}
        if _storage._doneDemandsIds != rhs_storage._doneDemandsIds {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
