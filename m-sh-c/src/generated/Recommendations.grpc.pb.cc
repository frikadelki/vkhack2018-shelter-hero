// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: Recommendations.proto

#include "Recommendations.pb.h"
#include "Recommendations.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace sh {
namespace generated {

static const char* RecommendationsSearcher_method_names[] = {
  "/sh.generated.RecommendationsSearcher/findRecommendations",
};

std::unique_ptr< RecommendationsSearcher::Stub> RecommendationsSearcher::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< RecommendationsSearcher::Stub> stub(new RecommendationsSearcher::Stub(channel));
  return stub;
}

RecommendationsSearcher::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_findRecommendations_(RecommendationsSearcher_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status RecommendationsSearcher::Stub::findRecommendations(::grpc::ClientContext* context, const ::sh::generated::Task& request, ::sh::generated::Recommendations* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_findRecommendations_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::sh::generated::Recommendations>* RecommendationsSearcher::Stub::AsyncfindRecommendationsRaw(::grpc::ClientContext* context, const ::sh::generated::Task& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::sh::generated::Recommendations>::Create(channel_.get(), cq, rpcmethod_findRecommendations_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::sh::generated::Recommendations>* RecommendationsSearcher::Stub::PrepareAsyncfindRecommendationsRaw(::grpc::ClientContext* context, const ::sh::generated::Task& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::sh::generated::Recommendations>::Create(channel_.get(), cq, rpcmethod_findRecommendations_, context, request, false);
}

RecommendationsSearcher::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      RecommendationsSearcher_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< RecommendationsSearcher::Service, ::sh::generated::Task, ::sh::generated::Recommendations>(
          std::mem_fn(&RecommendationsSearcher::Service::findRecommendations), this)));
}

RecommendationsSearcher::Service::~Service() {
}

::grpc::Status RecommendationsSearcher::Service::findRecommendations(::grpc::ServerContext* context, const ::sh::generated::Task* request, ::sh::generated::Recommendations* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace sh
}  // namespace generated

